{"ast":null,"code":"var _jsxFileName = \"/Users/valerypronin/Desktop/reactproject/react-project2/src/components/Shop/components/Sidebar/components/Filters/components/Colors/Colors.jsx\";\nimport React from 'react';\nimport { parseColors } from '../../../../../../../../helpers/ParseData';\nimport productsData from '../../../../../../../../products.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Colors = ({\n  selectedColors,\n  setSelectedColors\n}) => {\n  const colors = parseColors(productsData.products);\n  const handleColorChange = e => {\n    const {\n      value,\n      checked\n    } = e.target;\n    setSelectedColors(prevColors => checked ? [...prevColors, value] : prevColors.filter(color => color !== value));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sidebar-item\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar-title\",\n      children: \"Colors\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar-content\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"colors\",\n        children: colors.map(color => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"color\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            className: \"color-checkbox\",\n            id: color.toLowerCase(),\n            value: color,\n            checked: selectedColors.includes(color),\n            onChange: handleColorChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: color.toLowerCase(),\n            className: \"color-name\",\n            children: color\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 15\n          }, this)]\n        }, color, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n_c = Colors;\nexport default Colors;\nvar _c;\n$RefreshReg$(_c, \"Colors\");","map":{"version":3,"names":["React","parseColors","productsData","jsxDEV","_jsxDEV","Colors","selectedColors","setSelectedColors","colors","products","handleColorChange","e","value","checked","target","prevColors","filter","color","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","type","id","toLowerCase","includes","onChange","htmlFor","_c","$RefreshReg$"],"sources":["/Users/valerypronin/Desktop/reactproject/react-project2/src/components/Shop/components/Sidebar/components/Filters/components/Colors/Colors.jsx"],"sourcesContent":["import React from 'react'\nimport { parseColors } from '../../../../../../../../helpers/ParseData'\nimport productsData from '../../../../../../../../products.json'\n\nconst Colors = ({ selectedColors, setSelectedColors }) => {\n  const colors = parseColors(productsData.products)\n\n  const handleColorChange = (e) => {\n    const { value, checked } = e.target\n    setSelectedColors((prevColors) =>\n      checked ? [...prevColors, value] : prevColors.filter((color) => color !== value)\n    )\n  }\n\n  return (\n    <div className=\"sidebar-item\">\n      <div className=\"sidebar-title\">Colors</div>\n      <div className=\"sidebar-content\">\n        <div className=\"colors\">\n          {colors.map((color) => (\n            <div className=\"color\" key={color}>\n              <input\n                type=\"checkbox\"\n                className=\"color-checkbox\"\n                id={color.toLowerCase()}\n                value={color}\n                checked={selectedColors.includes(color)}\n                onChange={handleColorChange}\n              />\n              <label htmlFor={color.toLowerCase()} className=\"color-name\">\n                {color}\n              </label>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Colors"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,2CAA2C;AACvE,OAAOC,YAAY,MAAM,uCAAuC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEhE,MAAMC,MAAM,GAAGA,CAAC;EAAEC,cAAc;EAAEC;AAAkB,CAAC,KAAK;EACxD,MAAMC,MAAM,GAAGP,WAAW,CAACC,YAAY,CAACO,QAAQ,CAAC;EAEjD,MAAMC,iBAAiB,GAAIC,CAAC,IAAK;IAC/B,MAAM;MAAEC,KAAK;MAAEC;IAAQ,CAAC,GAAGF,CAAC,CAACG,MAAM;IACnCP,iBAAiB,CAAEQ,UAAU,IAC3BF,OAAO,GAAG,CAAC,GAAGE,UAAU,EAAEH,KAAK,CAAC,GAAGG,UAAU,CAACC,MAAM,CAAEC,KAAK,IAAKA,KAAK,KAAKL,KAAK,CACjF,CAAC;EACH,CAAC;EAED,oBACER,OAAA;IAAKc,SAAS,EAAC,cAAc;IAAAC,QAAA,gBAC3Bf,OAAA;MAAKc,SAAS,EAAC,eAAe;MAAAC,QAAA,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAC3CnB,OAAA;MAAKc,SAAS,EAAC,iBAAiB;MAAAC,QAAA,eAC9Bf,OAAA;QAAKc,SAAS,EAAC,QAAQ;QAAAC,QAAA,EACpBX,MAAM,CAACgB,GAAG,CAAEP,KAAK,iBAChBb,OAAA;UAAKc,SAAS,EAAC,OAAO;UAAAC,QAAA,gBACpBf,OAAA;YACEqB,IAAI,EAAC,UAAU;YACfP,SAAS,EAAC,gBAAgB;YAC1BQ,EAAE,EAAET,KAAK,CAACU,WAAW,CAAC,CAAE;YACxBf,KAAK,EAAEK,KAAM;YACbJ,OAAO,EAAEP,cAAc,CAACsB,QAAQ,CAACX,KAAK,CAAE;YACxCY,QAAQ,EAAEnB;UAAkB;YAAAU,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC7B,CAAC,eACFnB,OAAA;YAAO0B,OAAO,EAAEb,KAAK,CAACU,WAAW,CAAC,CAAE;YAACT,SAAS,EAAC,YAAY;YAAAC,QAAA,EACxDF;UAAK;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACD,CAAC;QAAA,GAXkBN,KAAK;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAY5B,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAAQ,EAAA,GAlCK1B,MAAM;AAoCZ,eAAeA,MAAM;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}