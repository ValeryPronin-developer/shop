{"ast":null,"code":"export const parseCategories = products => {\n  const categories = new Set(['All']);\n  products.forEach(product => {\n    if (product.categories && Array.isArray(product.categories)) {\n      product.categories.forEach(category => categories.add(category));\n    }\n  });\n  return Array.from(categories);\n};\nexport const parseColors = products => {\n  const colors = new Set();\n  products.forEach(product => {\n    if (product.color) {\n      colors.add(product.color);\n    }\n  });\n  return Array.from(colors);\n};\nexport const parsePrice = products => {\n  let minPrice = Number.POSITIVE_INFINITY;\n  let maxPrice = Number.NEGATIVE_INFINITY;\n  products.forEach(product => {\n    if (product.price) {\n      if (product.price < minPrice) {\n        minPrice = product.price;\n      }\n      if (product.price > maxPrice) {\n        maxPrice = product.price;\n      }\n    }\n  });\n  return {\n    minPrice,\n    maxPrice\n  };\n};\nexport const parseData = products => {\n  const categories = parseCategories(products);\n  const colors = parseColors(products);\n  const {\n    minPrice,\n    maxPrice\n  } = parsePrice(products);\n  return {\n    categories,\n    colors,\n    minPrice,\n    maxPrice\n  };\n};","map":{"version":3,"names":["parseCategories","products","categories","Set","forEach","product","Array","isArray","category","add","from","parseColors","colors","color","parsePrice","minPrice","Number","POSITIVE_INFINITY","maxPrice","NEGATIVE_INFINITY","price","parseData"],"sources":["/Users/valerypronin/Desktop/reactproject/react-project2/src/helpers/ParseData.js"],"sourcesContent":["export const parseCategories = (products) => {\n    const categories = new Set(['All'])\n    products.forEach((product) => {\n        if (product.categories && Array.isArray(product.categories)) {\n            product.categories.forEach((category) => categories.add(category))\n        }\n    })\n    return Array.from(categories)\n}\n\nexport const parseColors = (products) => {\n    const colors = new Set()\n    products.forEach((product) => {\n        if (product.color) {\n            colors.add(product.color)\n        }\n    })\n    return Array.from(colors)\n}\n\nexport const parsePrice = (products) => {\n    let minPrice = Number.POSITIVE_INFINITY\n    let maxPrice = Number.NEGATIVE_INFINITY\n\n    products.forEach((product) => {\n        if (product.price) {\n            if (product.price < minPrice) {\n                minPrice = product.price\n            }\n            if (product.price > maxPrice) {\n                maxPrice = product.price\n            }\n        }\n    })\n\n    return { minPrice, maxPrice }\n}\n\nexport const parseData = (products) => {\n    const categories = parseCategories(products)\n    const colors = parseColors(products)\n    const { minPrice, maxPrice } = parsePrice(products)\n\n    return {\n        categories,\n        colors,\n        minPrice,\n        maxPrice,\n    }\n}"],"mappings":"AAAA,OAAO,MAAMA,eAAe,GAAIC,QAAQ,IAAK;EACzC,MAAMC,UAAU,GAAG,IAAIC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC;EACnCF,QAAQ,CAACG,OAAO,CAAEC,OAAO,IAAK;IAC1B,IAAIA,OAAO,CAACH,UAAU,IAAII,KAAK,CAACC,OAAO,CAACF,OAAO,CAACH,UAAU,CAAC,EAAE;MACzDG,OAAO,CAACH,UAAU,CAACE,OAAO,CAAEI,QAAQ,IAAKN,UAAU,CAACO,GAAG,CAACD,QAAQ,CAAC,CAAC;IACtE;EACJ,CAAC,CAAC;EACF,OAAOF,KAAK,CAACI,IAAI,CAACR,UAAU,CAAC;AACjC,CAAC;AAED,OAAO,MAAMS,WAAW,GAAIV,QAAQ,IAAK;EACrC,MAAMW,MAAM,GAAG,IAAIT,GAAG,CAAC,CAAC;EACxBF,QAAQ,CAACG,OAAO,CAAEC,OAAO,IAAK;IAC1B,IAAIA,OAAO,CAACQ,KAAK,EAAE;MACfD,MAAM,CAACH,GAAG,CAACJ,OAAO,CAACQ,KAAK,CAAC;IAC7B;EACJ,CAAC,CAAC;EACF,OAAOP,KAAK,CAACI,IAAI,CAACE,MAAM,CAAC;AAC7B,CAAC;AAED,OAAO,MAAME,UAAU,GAAIb,QAAQ,IAAK;EACpC,IAAIc,QAAQ,GAAGC,MAAM,CAACC,iBAAiB;EACvC,IAAIC,QAAQ,GAAGF,MAAM,CAACG,iBAAiB;EAEvClB,QAAQ,CAACG,OAAO,CAAEC,OAAO,IAAK;IAC1B,IAAIA,OAAO,CAACe,KAAK,EAAE;MACf,IAAIf,OAAO,CAACe,KAAK,GAAGL,QAAQ,EAAE;QAC1BA,QAAQ,GAAGV,OAAO,CAACe,KAAK;MAC5B;MACA,IAAIf,OAAO,CAACe,KAAK,GAAGF,QAAQ,EAAE;QAC1BA,QAAQ,GAAGb,OAAO,CAACe,KAAK;MAC5B;IACJ;EACJ,CAAC,CAAC;EAEF,OAAO;IAAEL,QAAQ;IAAEG;EAAS,CAAC;AACjC,CAAC;AAED,OAAO,MAAMG,SAAS,GAAIpB,QAAQ,IAAK;EACnC,MAAMC,UAAU,GAAGF,eAAe,CAACC,QAAQ,CAAC;EAC5C,MAAMW,MAAM,GAAGD,WAAW,CAACV,QAAQ,CAAC;EACpC,MAAM;IAAEc,QAAQ;IAAEG;EAAS,CAAC,GAAGJ,UAAU,CAACb,QAAQ,CAAC;EAEnD,OAAO;IACHC,UAAU;IACVU,MAAM;IACNG,QAAQ;IACRG;EACJ,CAAC;AACL,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}