{"ast":null,"code":"export const parseCategories=products=>{const categories=new Set(['All']);products.forEach(product=>{if(product.categories&&Array.isArray(product.categories)){product.categories.forEach(category=>categories.add(category));}});return Array.from(categories);};export const parseColors=products=>{const colors=new Set();products.forEach(product=>{if(product.color){colors.add(product.color);}});return Array.from(colors);};export const parsePrice=products=>{let minPrice=Number.POSITIVE_INFINITY;let maxPrice=Number.NEGATIVE_INFINITY;products.forEach(product=>{if(product.price){if(product.price<minPrice){minPrice=product.price;}if(product.price>maxPrice){maxPrice=product.price;}}});return{minPrice,maxPrice};};export const parseData=products=>{const categories=parseCategories(products);const colors=parseColors(products);const{minPrice,maxPrice}=parsePrice(products);return{categories,colors,minPrice,maxPrice};};","map":{"version":3,"names":["parseCategories","products","categories","Set","forEach","product","Array","isArray","category","add","from","parseColors","colors","color","parsePrice","minPrice","Number","POSITIVE_INFINITY","maxPrice","NEGATIVE_INFINITY","price","parseData"],"sources":["/Users/valerypronin/Desktop/reactproject/react-project2/src/helpers/ParseData.js"],"sourcesContent":["export const parseCategories = (products) => {\n    const categories = new Set(['All'])\n    products.forEach((product) => {\n        if (product.categories && Array.isArray(product.categories)) {\n            product.categories.forEach((category) => categories.add(category))\n        }\n    })\n    return Array.from(categories)\n}\n\nexport const parseColors = (products) => {\n    const colors = new Set()\n    products.forEach((product) => {\n        if (product.color) {\n            colors.add(product.color)\n        }\n    })\n    return Array.from(colors)\n}\n\nexport const parsePrice = (products) => {\n    let minPrice = Number.POSITIVE_INFINITY\n    let maxPrice = Number.NEGATIVE_INFINITY\n\n    products.forEach((product) => {\n        if (product.price) {\n            if (product.price < minPrice) {\n                minPrice = product.price\n            }\n            if (product.price > maxPrice) {\n                maxPrice = product.price\n            }\n        }\n    })\n\n    return { minPrice, maxPrice }\n}\n\nexport const parseData = (products) => {\n    const categories = parseCategories(products)\n    const colors = parseColors(products)\n    const { minPrice, maxPrice } = parsePrice(products)\n\n    return {\n        categories,\n        colors,\n        minPrice,\n        maxPrice,\n    }\n}"],"mappings":"AAAA,MAAO,MAAM,CAAAA,eAAe,CAAIC,QAAQ,EAAK,CACzC,KAAM,CAAAC,UAAU,CAAG,GAAI,CAAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CACnCF,QAAQ,CAACG,OAAO,CAAEC,OAAO,EAAK,CAC1B,GAAIA,OAAO,CAACH,UAAU,EAAII,KAAK,CAACC,OAAO,CAACF,OAAO,CAACH,UAAU,CAAC,CAAE,CACzDG,OAAO,CAACH,UAAU,CAACE,OAAO,CAAEI,QAAQ,EAAKN,UAAU,CAACO,GAAG,CAACD,QAAQ,CAAC,CAAC,CACtE,CACJ,CAAC,CAAC,CACF,MAAO,CAAAF,KAAK,CAACI,IAAI,CAACR,UAAU,CAAC,CACjC,CAAC,CAED,MAAO,MAAM,CAAAS,WAAW,CAAIV,QAAQ,EAAK,CACrC,KAAM,CAAAW,MAAM,CAAG,GAAI,CAAAT,GAAG,CAAC,CAAC,CACxBF,QAAQ,CAACG,OAAO,CAAEC,OAAO,EAAK,CAC1B,GAAIA,OAAO,CAACQ,KAAK,CAAE,CACfD,MAAM,CAACH,GAAG,CAACJ,OAAO,CAACQ,KAAK,CAAC,CAC7B,CACJ,CAAC,CAAC,CACF,MAAO,CAAAP,KAAK,CAACI,IAAI,CAACE,MAAM,CAAC,CAC7B,CAAC,CAED,MAAO,MAAM,CAAAE,UAAU,CAAIb,QAAQ,EAAK,CACpC,GAAI,CAAAc,QAAQ,CAAGC,MAAM,CAACC,iBAAiB,CACvC,GAAI,CAAAC,QAAQ,CAAGF,MAAM,CAACG,iBAAiB,CAEvClB,QAAQ,CAACG,OAAO,CAAEC,OAAO,EAAK,CAC1B,GAAIA,OAAO,CAACe,KAAK,CAAE,CACf,GAAIf,OAAO,CAACe,KAAK,CAAGL,QAAQ,CAAE,CAC1BA,QAAQ,CAAGV,OAAO,CAACe,KAAK,CAC5B,CACA,GAAIf,OAAO,CAACe,KAAK,CAAGF,QAAQ,CAAE,CAC1BA,QAAQ,CAAGb,OAAO,CAACe,KAAK,CAC5B,CACJ,CACJ,CAAC,CAAC,CAEF,MAAO,CAAEL,QAAQ,CAAEG,QAAS,CAAC,CACjC,CAAC,CAED,MAAO,MAAM,CAAAG,SAAS,CAAIpB,QAAQ,EAAK,CACnC,KAAM,CAAAC,UAAU,CAAGF,eAAe,CAACC,QAAQ,CAAC,CAC5C,KAAM,CAAAW,MAAM,CAAGD,WAAW,CAACV,QAAQ,CAAC,CACpC,KAAM,CAAEc,QAAQ,CAAEG,QAAS,CAAC,CAAGJ,UAAU,CAACb,QAAQ,CAAC,CAEnD,MAAO,CACHC,UAAU,CACVU,MAAM,CACNG,QAAQ,CACRG,QACJ,CAAC,CACL,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}