{"ast":null,"code":"export const filterProducts = (products, filters) => {\n  const {\n    category,\n    minPrice,\n    maxPrice,\n    selectedColors\n  } = filters;\n  return products.filter(product => {\n    const matchesCategory = category === 'All' || product.categories.includes(category);\n    const matchesPrice = (!minPrice || product.price >= parseFloat(minPrice)) && (!maxPrice || product.price <= parseFloat(maxPrice));\n    const matchesColor = selectedColors.length === 0 || selectedColors.includes(product.color);\n    return matchesCategory && matchesPrice && matchesColor;\n  });\n};\nexport const searchProducts = (products, searchQuery) => {\n  const query = typeof searchQuery === 'string' ? searchQuery.toLowerCase() : '';\n  return products.filter(product => product.name.toLowerCase().includes(query));\n};\nexport const sortProducts = (products, sortOrder) => {\n  return [...products].sort((a, b) => {\n    switch (sortOrder) {\n      case 'ASC':\n        return a.name.localeCompare(b.name);\n      case 'DESC':\n        return b.name.localeCompare(a.name);\n      case 'low':\n        return a.price - b.price;\n      case 'high':\n        return b.price - a.price;\n      default:\n        return 0;\n    }\n  });\n};\nexport const getProductsToDisplay = (products, currentPage, productsPerPage = 12) => {\n  const startIndex = (currentPage - 1) * productsPerPage;\n  const endIndex = startIndex + productsPerPage;\n  return products.slice(startIndex, endIndex);\n};\nexport const calculateTotalPages = (totalProducts, productsPerPage = 12) => {\n  return Math.ceil(totalProducts / productsPerPage);\n};\n\n// export const handleLocalStorageUpdate = (key, updateFunction) => {\n//     let data = JSON.parse(localStorage.getItem(key)) || []\n//     updateFunction(data)\n//     localStorage.setItem(key, JSON.stringify(data))\n// }\n\nexport const modifyData = (products, {\n  search,\n  filters,\n  sort,\n  currentPage\n}) => {\n  const filteredProducts = filterProducts(products, filters);\n  const searchedProducts = searchProducts(filteredProducts, search);\n  const sortedProducts = sortProducts(searchedProducts, sort);\n  const totalFilteredProducts = sortedProducts.length;\n  const productsToDisplay = getProductsToDisplay(sortedProducts, currentPage);\n  return {\n    filteredProducts: productsToDisplay,\n    totalPages: calculateTotalPages(totalFilteredProducts),\n    totalFilteredProducts\n  };\n};","map":{"version":3,"names":["filterProducts","products","filters","category","minPrice","maxPrice","selectedColors","filter","product","matchesCategory","categories","includes","matchesPrice","price","parseFloat","matchesColor","length","color","searchProducts","searchQuery","query","toLowerCase","name","sortProducts","sortOrder","sort","a","b","localeCompare","getProductsToDisplay","currentPage","productsPerPage","startIndex","endIndex","slice","calculateTotalPages","totalProducts","Math","ceil","modifyData","search","filteredProducts","searchedProducts","sortedProducts","totalFilteredProducts","productsToDisplay","totalPages"],"sources":["/Users/valerypronin/Desktop/reactproject/react-project2/src/helpers/ShopFilters.js"],"sourcesContent":["export const filterProducts = (products, filters) => {\n    const { category, minPrice, maxPrice, selectedColors } = filters\n    return products.filter(product => {\n        const matchesCategory = category === 'All' || product.categories.includes(category)\n        const matchesPrice = (!minPrice || product.price >= parseFloat(minPrice)) &&\n            (!maxPrice || product.price <= parseFloat(maxPrice))\n        const matchesColor = selectedColors.length === 0 || selectedColors.includes(product.color)\n\n        return matchesCategory && matchesPrice && matchesColor\n    })\n}\n\nexport const searchProducts = (products, searchQuery) => {\n    const query = typeof searchQuery === 'string' ? searchQuery.toLowerCase() : ''\n    return products.filter(product =>\n        product.name.toLowerCase().includes(query)\n    )\n}\n\nexport const sortProducts = (products, sortOrder) => {\n    return [...products].sort((a, b) => {\n        switch (sortOrder) {\n            case 'ASC':\n                return a.name.localeCompare(b.name)\n            case 'DESC':\n                return b.name.localeCompare(a.name)\n            case 'low':\n                return a.price - b.price\n            case 'high':\n                return b.price - a.price\n            default:\n                return 0\n        }\n    })\n}\n\nexport const getProductsToDisplay = (products, currentPage, productsPerPage = 12) => {\n    const startIndex = (currentPage - 1) * productsPerPage\n    const endIndex = startIndex + productsPerPage\n    return products.slice(startIndex, endIndex)\n}\n\nexport const calculateTotalPages = (totalProducts, productsPerPage = 12) => {\n    return Math.ceil(totalProducts / productsPerPage)\n}\n\n// export const handleLocalStorageUpdate = (key, updateFunction) => {\n//     let data = JSON.parse(localStorage.getItem(key)) || []\n//     updateFunction(data)\n//     localStorage.setItem(key, JSON.stringify(data))\n// }\n\nexport const modifyData = (products, { search, filters, sort, currentPage }) => {\n    const filteredProducts = filterProducts(products, filters)\n    const searchedProducts = searchProducts(filteredProducts, search)\n    const sortedProducts = sortProducts(searchedProducts, sort)\n    const totalFilteredProducts = sortedProducts.length\n    const productsToDisplay = getProductsToDisplay(sortedProducts, currentPage)\n\n    return {\n        filteredProducts: productsToDisplay,\n        totalPages: calculateTotalPages(totalFilteredProducts),\n        totalFilteredProducts\n    }\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}